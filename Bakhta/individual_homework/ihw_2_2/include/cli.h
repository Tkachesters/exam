#ifndef OMSU_2020_CLI_H
#define OMSU_2020_CLI_H

#include "matrix.h"

/*
 * Редактор матрицы. Позволяет выводить, а также редактировать матрицу.
 * Текущий элемент можно менять с помощью стрелок
 * @params:
 *      Матрица
 *
 * @return:
 *      0 - все штатно
 *      ...
 */
void MatrixEditor(Matrix *);

/*
 * Выводит на экран матрицу, а также вспомогательные заметки
 * @params:
 *      Матрица
 *      Строка, на которой стоит каретка
 *      Колонка, на которой стоит каретка
 *      Текущий элемент
 *
 */
void UpdateScreen(Matrix *, int, int, int);

/*
 * Функция запрашивает у пользователя кол-во строк, столбцов.
 * Больше 0, но меньше максимальных.
 * @output by reference:
 *      countRows - кол-во строк
 *      countCols - кол-во столбцов
 */
int InputSizeMatrix(int &, int &);

/*
 * Позволяет менять координаты каретки, ограничивая ее нулем и размерами матрицы
 * @params:
 *      Ссылка на каретку (либо строка, либо колонка)
 *      Шаг сдвига каретки
 *      Количество строк/столбцов
 */
void MoveArrow(int &, int, int);

/*
 * Создает матрицу указанных размеров и заполняет ее нулями
 * @params:
 *      Количество строк
 *      Количество столбцов
 * @returns:
 *      Указатель на созданную матрицу
 */
Matrix *CreateZeroMatrix(int &, int &);

/*
 * Создает матрицу указанных размеров и заполняет ее случайными числами
 * @params:
 *      Количество строк
 *      Количество столбцов
 * @returns:
 *      Указатель на созданную матрицу
 */
Matrix *CreateRandomMatrix(int &, int &);

/*
 * Создает матрицу указанных размеров и заполняет ее из файла
 * @params:
 *      Количество строк
 *      Количество столбцов
 *      Название файла
 * @returns:
 *      Указатель на созданную матрицу
 */
bool CreateMatrixFromFile(int, int, std::fstream &, Matrix *);

#endif //OMSU_2020_CLI_H
